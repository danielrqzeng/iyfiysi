// gen by iyfiysi at {{ .CreateTime.Format "2006 Jan 02" }}

package {{.PackageName}}

import (
	"google.golang.org/grpc"
	"github.com/grpc-ecosystem/go-grpc-prometheus"

	"{{.Domain}}/{{.AppName}}/internal/pkg/interceptor"
	"{{.Domain}}/{{.AppName}}/internal/pkg/trace"
)

func Register(etcdAddrs []string, jaegerReporterUrl, instance string) (server *grpc.Server, err error) {
    err = jaeger.InitTracer(jaegerReporterUrl, "{{.AppName}}")
    if err != nil {
        return
    }
	interceptors := interceptor.GetServerInterceptors()
	server = grpc.NewServer(grpc.UnaryInterceptor(interceptors))

    err = DoRegister(server,instance)
	if err != nil{
		return
	}
    grpc_prometheus.Register(server)
    grpc_prometheus.EnableHandlingTimeHistogram()
	return
}