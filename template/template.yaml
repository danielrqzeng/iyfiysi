app: "iyfiysi"
version: "v1.0.0"
#
#  .
#  |-- api
#  |-- bin
#  |-- cmd
#  |   |-- config
#  |   |-- gateway
#  |   `-- server
#  |-- docs
#  |-- init
#  |-- internal
#  |   |-- app
#  |   |   |-- gateway
#  |   |   `-- server
#  |   `-- pkg
#  |       |-- logger
#  |       |-- mysql
#  |       |-- redis
#  |       `-- utils
#  |-- pkg
#  |-- scripts
#  `-- third_party

templates:
  # 格式说明
  #  - id: "utils_init" #可为空,若是有,则必须唯一
  #    flag: 5 # 标识(比特组合)，0:none,1:文件类型,2:目录类型,4:给iyfiysi使用,8:给protoc-gen-iyfiysi使用
  #    name: "util_init" #模板名称
  #    desc: "公共类初始化" #模板描述
  #    src: "util_init.go.tmpl" # 模板原文件(对应template文件夹中的模板文件,其用statik打包在bin包里面)
  #    dst: "internal/pkg/utils/init.go" # 生成的文件或者目录，其为unix格式的分隔形式
  #    # 模板需要的参数，系统会默认带有Domain,AppName,CreateTime三个变量，其他需要的可填写对于的kv中
  #    params:
  #      PackageName: "utils"

  - id: "license"
    flag: 5 # 5=1+4:文件类型且是给iyfiysi使用
    name: "license"
    desc: "license"
    src: "LICENSE.tmpl"
    dst: "LICENSE"
    params:
  - id: "gomod"
    flag: 5
    name: "gomod"
    desc: "go mod文件"
    src: "go.mod.tmpl"
    dst: "go.mod"
    params:
  - id: "build.sh"
    flag: 5
    name: "build.sh"
    desc: "linux编译脚本"
    src: "build.sh.tmpl"
    dst: "build.sh"
    params:
  - id: "conf_init"
    flag: 5
    name: "conf_init"
    desc: "配置初始化"
    src: "model_init.go.tmpl"
    dst: "internal/pkg/conf/init.go"
    params:
      PackageName: "conf"
  - id: "conf_mgr_main"
    flag: 5
    name: "conf_mgr_main"
    desc: "公共类初始化"
    src: "conf_mgr_main.go.tmpl"
    dst: "internal/pkg/conf/main.go"
    params:
      PackageName: "conf"
  - id: "data"
    flag: 5
    name: "data"
    desc: "data 共用数据结构"
    src: "data.go.tmpl"
    dst: "internal/pkg/data/data.go"
    params:
      PackageName: "data"
  - id: "utils_init"
    flag: 5
    name: "util_init"
    desc: "公共类初始化"
    src: "util_init.go.tmpl"
    dst: "internal/pkg/utils/init.go"
    params:
      PackageName: "utils"
  - id: "utils_util"
    flag: 5
    name: "util_init"
    desc: "公共类初始化"
    src: "util_util.go.tmpl"
    dst: "internal/pkg/utils/util.go"
    params:
      PackageName: "utils"
  - id: "utils_util_test"
    flag: 5
    name: "util_init_test"
    desc: "公共类初始化"
    src: "util_util_test.go.tmpl"
    dst: "internal/pkg/utils/util_test.go"
    params:
      PackageName: "utils"
  - id: "utils_fs"
    flag: 5
    name: "util_fs"
    desc: "文件操作"
    src: "util_fs.go.tmpl"
    dst: "internal/pkg/utils/fs.go"
    params:
      PackageName: "utils"
  - id: "util_net"
    flag: 5
    name: "util_net"
    desc: "公共类初始化"
    src: "util_net.go.tmpl"
    dst: "internal/pkg/utils/net.go"
    params:
      PackageName: "utils"
  - id: "util_net_test"
    flag: 5
    name: "util_net_test"
    desc: "net相关的工具类"
    src: "util_net_test.go.tmpl"
    dst: "internal/pkg/utils/net_test.go"
    params:
      PackageName: "utils"
  - id: "util_crypt"
    flag: 5
    name: "util_crypt"
    desc: "crypt相关的工具类"
    src: "util_crypt.go.tmpl"
    dst: "internal/pkg/utils/crypt.go"
    params:
      PackageName: "utils"

  - id: "db_init"
    flag: 5
    name: "db_init"
    desc: "db的初始化"
    src: "model_init.go.tmpl"
    dst: "internal/pkg/db/init.go"
    params:
      PackageName: "db"
  - id: "jaeger"
    flag: 5
    name: "jaeger"
    desc: "链路追踪的封装"
    src: "jaeger.go.tmpl"
    dst: "internal/pkg/trace/jaeger.go"
    params:
      PackageName: "trace"
  - id: "trace_init"
    flag: 5
    name: "trace init"
    desc: "链路追踪的初始化"
    src: "trace_init.go.tmpl"
    dst: "internal/pkg/trace/init.go"
    params:
      PackageName: "trace"
  - id: "logger"
    flag: 5
    name: "logger"
    desc: "日志"
    src: "logger.go.tmpl"
    dst: "internal/pkg/logger/logger.go"
    params:
      PackageName: "logger"
  - id: "logger"
    flag: 5
    name: "logger"
    desc: "日志的初始化"
    src: "logger_init.go.tmpl"
    dst: "internal/pkg/logger/init.go"
    params:
      PackageName: "logger"
  - id: "governance"
    flag: 5
    name: "governance"
    desc: "服务治理"
    src: "model_init.go.tmpl"
    dst: "internal/pkg/governance/init.go"
    params:
      PackageName: "governance"
  - id: "etcdv3"
    flag: 5
    name: "etcdv3"
    desc: "etcd v3的sdk封装"
    src: "etcdv3.go.tmpl"
    dst: "internal/pkg/governance/etcdv3.go"
    params:
      PackageName: "governance"
  - id: "governance_instance"
    flag: 5
    name: "governance_instance"
    desc: "服务治理中获取instance的ip信息"
    src: "governance_instance.go.tmpl"
    dst: "internal/pkg/governance/instance.go"
    params:
      PackageName: "governance"
  # -----------------------interceptor-----------------------
  - id: "interceptor"
    flag: 5
    name: "interceptor"
    desc: "拦截器的初始化"
    src: "interceptor_init.go.tmpl"
    dst: "internal/pkg/interceptor/init.go"
    params:
      PackageName: "interceptor"
  - id: "interceptor_mgr"
    flag: 5
    name: "interceptor_mgr"
    desc: "拦截器的管理实例"
    src: "interceptor_mgr.go.tmpl"
    dst: "internal/pkg/interceptor/mgr.go"
    params:
      PackageName: "interceptor"
  - id: "interceptor_http_mgr"
    flag: 5
    name: "interceptor_http_mgr"
    desc: "http拦截器的管理实例"
    src: "interceptor_http_mgr.go.tmpl"
    dst: "internal/pkg/interceptor/http/mgr.go"
    params:
      PackageName: "http"
  - id: "interceptor_http_query"
    flag: 5
    name: "interceptor_http_query"
    desc: "http拦截器之query日志"
    src: "interceptor_http_query.go.tmpl"
    dst: "internal/pkg/interceptor/http/query.go"
    params:
      PackageName: "http"
  - id: "interceptor_http_cors"
    flag: 5
    name: "interceptor_http_cors"
    desc: "http拦截器之跨域处理"
    src: "interceptor_http_cors.go.tmpl"
    dst: "internal/pkg/interceptor/http/cors.go"
    params:
      PackageName: "http"
  - id: "interceptor_http_trace"
    flag: 5
    name: "interceptor_http_trace"
    desc: "http拦截器之追踪"
    src: "interceptor_http_trace.go.tmpl"
    dst: "internal/pkg/interceptor/http/trace.go"
    params:
      PackageName: "http"
  - id: "interceptor_http_metrics"
    flag: 5
    name: "interceptor_http_metrics"
    desc: "http拦截器的之http监控数据收集"
    src: "interceptor_http_metrics.go.tmpl"
    dst: "internal/pkg/interceptor/http/metrics.go"
    params:
      PackageName: "http"
  - id: "interceptor_grpc_mgr"
    flag: 5
    name: "interceptor_grpc_mgr"
    desc: "grpc拦截器的管理实例"
    src: "interceptor_grpc_mgr.go.tmpl"
    dst: "internal/pkg/interceptor/grpc/mgr.go"
    params:
      PackageName: "grpc"
  - id: "interceptor_grpc_auth"
    flag: 5
    name: "interceptor_grpc_auth"
    desc: "grpc拦截器之认证"
    src: "interceptor_grpc_auth.go.tmpl"
    dst: "internal/pkg/interceptor/grpc/auth.go"
    params:
      PackageName: "grpc"
  - id: "interceptor_grpc_limiter"
    flag: 5
    name: "interceptor_grpc_limiter"
    desc: "grpc拦截器之限流"
    src: "interceptor_grpc_limiter.go.tmpl"
    dst: "internal/pkg/interceptor/grpc/limiter.go"
    params:
      PackageName: "grpc"
  # -----------------------proto-----------------------
  - id: "proto_google_api_annotations.proto"
    flag: 5
    name: "proto_google_api_annotations.proto"
    desc: "proto 依赖"
    src: "proto_google_api_annotations.proto.tmpl"
    dst: "proto/google/api/annotations.proto"
    params:
  - id: "proto_google_api_http.proto"
    flag: 5
    name: "proto_google_api_http.proto"
    desc: "proto 依赖"
    src: "proto_google_api_http.proto.tmpl"
    dst: "proto/google/api/http.proto"
    params:
  - id: "proto_google_api_httpbody.proto"
    flag: 5
    name: "proto_google_api_httpbody.proto"
    desc: "protobuf 依赖"
    src: "proto_google_api_httpbody.proto.tmpl"
    dst: "proto/google/api/httpbody.proto"
    params:
  - id: "proto_google_protobuf_descriptor.proto"
    flag: 5
    name: "proto_google_protobuf_descriptor.proto"
    desc: "protobuf 依赖"
    src: "proto_google_protobuf_descriptor.proto.tmpl"
    dst: "proto/google/protobuf/descriptor.proto"
    params:
  - id: "proto_google_rpc_code.proto"
    flag: 5
    name: "proto_google_rpc_code.proto"
    desc: "protobuf 依赖"
    src: "proto_google_rpc_code.proto.tmpl"
    dst: "proto/google/rpc/code.proto"
    params:
  - id: "proto_google_rpc_error_details.proto"
    flag: 5
    name: "proto_google_rpc_error_details.proto"
    desc: "protobuf依赖"
    src: "proto_google_rpc_error_details.proto.tmpl"
    dst: "proto/google/rpc/error_details.proto"
    params:
  - id: "proto_google_rpc_status.proto"
    flag: 5
    name: "proto_google_rpc_status.proto"
    desc: "protobuf依赖"
    src: "proto_google_rpc_status.proto.tmpl"
    dst: "proto/google/rpc/status.proto"
    params:
  - id: "proto_service.proto"
    flag: 5
    name: "proto_service.proto"
    desc: "protobuf 样例 pb文件"
    src: "proto_service.proto.tmpl"
    dst: "proto/service.proto"
    params:
  - id: "proto_gen.sh"
    flag: 5
    name: "proto_gen.sh"
    desc: "生成pb的脚步"
    src: "proto_gen.sh.tmpl"
    dst: "proto/gen.sh"
    params:
  - id: "cmd_gateway_main"
    flag: 5
    name: "cmd_gateway_main"
    desc: "gateway bin"
    src: "cmd_gateway_main.go.tmpl"
    dst: "cmd/gateway/main.go"
    params:
      PackageName: "main"
  - id: "gateway_service_init"
    flag: 5
    name: "gateway_service_init"
    desc: "gateway服务注册服务初始化"
    src: "model_init.go.tmpl"
    dst: "internal/app/gateway/service/init.go"
    params:
      PackageName: "service"
  - id: "gateway_service_register"
    flag: 5
    name: "gateway_service_register"
    desc: "gateway服务注册逻辑"
    src: "gateway_register.go.tmpl"
    dst: "internal/app/gateway/service/register.go"
    params:
      PackageName: "service"
  - id: "app_gateway_main"
    flag: 5
    name: "app_gateway_main"
    desc: "gateway主逻辑"
    src: "app_gateway_main.go.tmpl"
    dst: "internal/app/gateway/main.go"
    params:
      PackageName: "gateway"
  - id: "cmd_server_main"
    flag: 5
    name: "cmd_server_main"
    desc: "server服务的主文件"
    src: "cmd_server_main.go.tmpl"
    dst: "cmd/server/main.go"
    params:
      PackageName: "main"
  - id: "app_server_main"
    flag: 5
    name: "app_server_main"
    desc: "server 服务初始文件"
    src: "app_server_main.go.tmpl"
    dst: "internal/app/server/main.go"
    params:
      PackageName: "server"
  - id: "server_service_init"
    flag: 5
    name: "server_service_init"
    desc: "server 服务初始文件"
    src: "model_init.go.tmpl"
    dst: "internal/app/server/service/init.go"
    params:
      PackageName: "service"
  - id: "server_service_service"
    flag: 5
    name: "server_service_service"
    desc: "server 服务逻辑实现"
    src: "server_service_service.go.tmpl"
    dst: "internal/app/server/service/service.go"
    params:
      PackageName: "service"
  - id: "conf_mgr"
    flag: 5
    name: "conf mgr"
    desc: "配置管理"
    src: "conf_main.go.tmpl"
    dst: "cmd/conf/main.go"
    params:
      PackageName: "main"
  - id: "conf_app"
    flag: 5
    name: "conf_app"
    desc: "配置文件"
    src: "conf_app.yaml.tmpl"
    dst: "conf/app.yaml"
    params:
      PackageName: "service"
      Version: "v1.0.0"
      GatewayAddr: "127.0.0.1:8081"
      ServerAddr: "127.0.0.1:9091"
      EtcdEnable: true
      EtcdServers:
        - "http://127.0.0.1:2379"
      JaegerEnable: true
      JaegerServers:
        - "localhost:6831"
      MetricsEnable: true
      DnsServerName: "dnsiyfiysi"
      KeystoreCA: "keystore/ca.crt"
      KeystorePublicKey: "keystore/grpc.crt"
      KeystorePrivateKey: "keystore/grpc.key"
  - id: "protoc_gateway_register" #一定要此名称,以分辨此为服务发现配置
    flag: 9
    name: "protoc_gateway_register"
    desc: "protoc生成的gateway服务注册"
    src: "protoc_gateway_register.go.tmpl"
    dst: "../internal/app/gateway/service/register.go"
    params:
      PackageName: "service"
  - id: "protoc_register" #一定要此名称,以分辨此为服务发现配置
    flag: 9
    name: "protoc_register"
    desc: "protoc生成的服务注册"
    src: "protoc_register.go.tmpl"
    dst: "../internal/app/server/service/service.go"
    params:
      PackageName: "service"
  - id: "protoc_impl" #一定要此名称,以分辨此为服务发现配置
    flag: 10
    name: "protoc_impl"
    desc: "protoc生成的服务实现"
    src: "protoc_impl.go.tmpl"
    dst: "../internal/app/server/service/"
    params:
      PackageName: "service"
  # 监控相关
  - id: "metric_confd_conf"
    flag: 5
    name: "metric_confd_conf"
    desc: "confd的配置文件"
    src: "metric_confd_conf.toml.tmpl"
    dst: "metric/confd/conf.d/confd.toml"
    params:
      TempFile: "confd_yaml.tmpl" #对应 metric_confd_tmpl.dst
      DestPath: "${PATH_TO_PROMETHEUS}/config/file_sd"
  - id: "metric_confd_tmpl"
    flag: 5
    name: "metric_confd_tmpl"
    desc: "confd的模板文件"
    src: "metric_confd_yaml.tmpl.tmpl"
    dst: "metric/confd/templates/confd_tmpl.tmpl"
    params:
      Value: "{{.Value}}"

#自签名证书
keystore:
  country: "CN" #国家
  organization: "Tencent" #组织名称
  organizationalUnit: "CSIG" #事业群
  commonName: "IYFIYSI" #通用名
  expireDays: 3650 #证书有效期,默认3650天（即十年)
  cacrt: "keystore/ca.crt" # 根证书公钥
  cakey: "keystore/ca.key" # 根证书私钥
  csr: "keystore/grpc.csr" # 签名申请
  crt: "keystore/grpc.crt" # 签名公钥，供给grpc服务调用方使用
  key: "keystore/grpc.key" # 签名私钥，供给grpc服务提供方使用
  dnsName: #相当于给这个证书限定访问的域名，client访问时候，也是需要带上来的，此处不用ip，是因为ip比较易变
    - "dnsiyfiysi"
#end