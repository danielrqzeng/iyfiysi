// gen by iyfiysi at {{ .CreateTime.Format "2006 Jan 02" }}
package {{.PackageName}}

import (
	"flag"
	"fmt"
	"os"
	"strings"
	"{{.Domain}}/{{.AppName}}/internal/pkg/conf"
)

//定义一个全局变量的命令行接收参数
var (
	etcdServerFlag = flag.String("etcd", "http://127.0.0.1:2379", `etcd server,split with "," if more than one etcd server`)
	confKeyFlag    = flag.String("conf_key", "/voice/config/app.yaml", `etcd conf key`)
	confFlag       = flag.String("conf", "./conf/app.yaml", "configuration file")
	versionFlag    = flag.Bool("version", false, "print the current version")
)

// Variables set at build time
var (
	version = "v1.0.0"
	commit  = "unknown"
	date    = "unknown"
)

func main() {
	flag.Parse()

	if *versionFlag {
		fmt.Printf("Version %v, commit %v, built at %v\n", version, commit, date)
		os.Exit(0)
	}
	etcdServers := strings.Split(*etcdServerFlag, ",")

	err := conf.PushConfigToRemote(etcdServers, *confKeyFlag, *confFlag)
	if err != nil {
		panic(err)
	}

	fmt.Println("update conf=" + *confFlag + " to " + *etcdServerFlag + " success")
	cmd := `ETCDCTL_API=3 etcdctl get --prefix "` + *confKeyFlag + `"`
	fmt.Println("etcd way to check is cmd=" + cmd)
	return
}