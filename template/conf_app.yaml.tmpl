# config file gen by iyfiysi at {{ .CreateTime.Format "2006 Jan 02" }}

app: "{{.AppName}}"
version: "{{.Version}}"

# gateway service,不支持即改即生效
gateway:
  listen: "{{.GatewayAddr}}" #侦听的地址，形如:127.0.0.1:8081,:8081

# server service,不支持即改即生效
server:
  minPort: 30000
  maxPort: 30500
  ignoreIP: # 若是机器中存在这些ip，忽略之（优先于ip列表判断）
    - "10.*.*.1"
    - "172.*.*.1"
    - "192.168.*.1"
  ip: # ip列表，对于提供服务的服务方，优先使用此配置的ip，若是列表为空，则程序自寻找
    - "172.30.0.14" #此列表也是有优先级的，第一个是最优先的，也支持172.30.0.*这种掩码格式的ip配置
    - "127.0.0.1"


# etcd,不支持即改即生效
etcd:
  enable: {{.EtcdEnable}} #是否开启etcd服务，目前只能开启
  registerKey: "service_{{.AppName}}" #注册服务时候的key
  etcdServer:
{{- range $EtcdServer := .EtcdServers}}
    - "{{$EtcdServer}}"
{{end}}

# jaeger,不支持即改即生效
jaeger:
  enable: {{.JaegerEnable}}
  jaegerServer:
{{- range $JaegerServer := .JaegerServers}}
    - "{{$JaegerServer}}"
{{end}}

# keystore,不支持即改即生效
keystore:
  serverName: "{{.DnsServerName}}" # gateway->server的域名（此和证书生成相关，不要乱改）
  ca: "{{.KeystoreCA}}" #root证书
  public: "{{.KeystorePublicKey}}" #公钥
  private: "{{.KeystorePrivateKey}}" #密钥

# 日志信息,不支持即改即生效
logger:
  - name: "main" #主日志
    file: "./logs/main.log"
    level: "debug" #debug|info|warning|error
  - name: "http" #审计日志
    file: "./logs/http.log"
    level: "debug"
  - name: "api" #api调用日志
    file: "./logs/api.log"
    level: "debug"
  - name: "db" #db请求日志
    file: "./logs/db.log"
    level: "debug"
  - name: "grpc" #grpc请求日志
    file: "./logs/grpc.log"
    level: "debug"

snowflakeNodeID: 0 #snowflake需要的node参数
# end