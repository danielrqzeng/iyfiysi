# config file gen by iyfiysi at {{ .CreateTime.Format "2006 Jan 02" }}

app: "{{.AppName}}"
version: "{{.Version}}" # 版本，由于服务治理是基于app/version作为前缀key的，是以若是提供一样的服务，可以不变，否则变之
token: "7625C007783D1B09F2522E3F0A533404" # gateway->server调用认证
limit: 1000

# 服务启动会根据ip和port自己寻找合适的ip和端口使用来启动服务
# 先从ignoreIP列表中过滤掉不用的ip，再根据potentialIP次第寻找可用ip
ignoreIP: &ignoreIPRef
  - "10.*.*.1"
  - "172.*.*.1"
  - "192.168.*.1"
potentialIP: &potentialIPRef
  - "172.30.0.14" #此列表也是有优先级的，第一个是最优先的，也支持172.30.0.*这种掩码格式的ip配置
  - "127.0.0.1"

# gateway service,不支持即改即生效
gateway:
  minPort: 8000
  maxPort: 8050
  ignoreIP:
    *ignoreIPRef
  potentialIP:
    *potentialIPRef

# server service,不支持即改即生效
server:
  minPort: 30000
  maxPort: 30500
  ignoreIP:
    *ignoreIPRef
  potentialIP:
    *potentialIPRef

metrics:
  enable: {{.MetricsEnable}} # 是否开启监控
  gateway:
    path: "/metrics"
    minPort: 41000
    maxPort: 41500
    ignoreIP:
      *ignoreIPRef
    potentialIP:
      *potentialIPRef
  server:
    path: "/metrics"
    minPort: 42000
    maxPort: 42500
    ignoreIP:
      *ignoreIPRef
    potentialIP:
      *potentialIPRef

# etcd,不支持即改即生效
etcd:
  enable: {{.EtcdEnable}} #是否开启etcd服务，目前只能开启
  serviceKey: "/{{.AppName}}/{{.Version}}" #注册服务时候的key
  etcdServer:
{{- range $EtcdServer := .EtcdServers}}
    - "{{$EtcdServer}}"
{{end}}

# jaeger,不支持即改即生效
jaeger:
  enable: {{.JaegerEnable}}
  jaegerServer:
{{- range $JaegerServer := .JaegerServers}}
    - "{{$JaegerServer}}"
{{end}}

# keystore,不支持即改即生效
keystore:
  serverName: "{{.DnsServerName}}" # gateway->server的域名（此和证书生成相关，不要乱改）
  ca: "{{.KeystoreCA}}" #root证书
  public: "{{.KeystorePublicKey}}" #公钥
  private: "{{.KeystorePrivateKey}}" #密钥

# 日志信息,不支持即改即生效
logger:
  - name: "main" #主日志
    file: "./logs/main.log"
    level: "debug" #debug|info|warning|error
  - name: "http" #审计日志
    file: "./logs/http.log"
    level: "debug"
  - name: "api" #api调用日志
    file: "./logs/api.log"
    level: "debug"
  - name: "db" #db请求日志
    file: "./logs/db.log"
    level: "debug"
  - name: "grpc" #grpc请求日志
    file: "./logs/grpc.log"
    level: "debug"

snowflakeNodeID: 0 #snowflake需要的node参数
# end